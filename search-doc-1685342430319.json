[{"title":"ModSettings","type":0,"sectionRef":"#","url":"/JojoCom/api/ModSettings","content":"On this page ModSettings Stores necessary settings for the mod","keywords":""},{"title":"EventHandler","type":0,"sectionRef":"#","url":"/JojoCom/api/EventHandler","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"EventHandler","url":"/JojoCom/api/EventHandler#functions","content":" "},{"title":"RegisterEvent​","type":1,"pageTitle":"EventHandler","url":"/JojoCom/api/EventHandler#RegisterEvent","content":"&lt;/&gt; EventHandler.RegisterEvent(Name: string) → Signal Registers a new Event Signal connection if none is found Events.RegisterEvent(&quot;Hit&quot;)   "},{"title":"GetEventSignal​","type":1,"pageTitle":"EventHandler","url":"/JojoCom/api/EventHandler#GetEventSignal","content":"&lt;/&gt; EventHandler.GetEventSignal(Name: string) → Signal | nil Returns Event Signal if found  "},{"title":"FireEvent​","type":1,"pageTitle":"EventHandler","url":"/JojoCom/api/EventHandler#FireEvent","content":"&lt;/&gt; EventHandler.FireEvent( Name: string, ...: any ) → () Fires the specified Event with arguments Alternative: FireSignal Events.FireEvent(&quot;Hit&quot;, game.Players[&quot;Someone&quot;], 30) --OR Events.FireSignal(&quot;Hit&quot;, game.Players[&quot;Someone&quot;], 30)   "},{"title":"DestroyEvent​","type":1,"pageTitle":"EventHandler","url":"/JojoCom/api/EventHandler#DestroyEvent","content":"&lt;/&gt; EventHandler.DestroyEvent(Name: string) → () Destroys an Event signal Events.DestroyEvent(&quot;Hit&quot;)  "},{"title":"Util","type":0,"sectionRef":"#","url":"/JojoCom/api/Util","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Util","url":"/JojoCom/api/Util#functions","content":" "},{"title":"WallCheck​","type":1,"pageTitle":"Util","url":"/JojoCom/api/Util#WallCheck","content":"&lt;/&gt; Util.WallCheck( part1: BasePart , part2: BasePart , params: RaycastParams? ) → RaycastResult Raycast check for the wall between 2 parts  "},{"title":"DotCheck​","type":1,"pageTitle":"Util","url":"/JojoCom/api/Util#DotCheck","content":"&lt;/&gt; Util.DotCheck( part1: BasePart , part2: BasePart ) → number Vector3 Dot Check between 2 parts, returns dot product ([-1;1])  "},{"title":"GetPlatform​","type":1,"pageTitle":"Util","url":"/JojoCom/api/Util#GetPlatform","content":"This item only works when running on the client. Client &lt;/&gt; Util.GetPlatform() → () Get the Platform that the Client is playing on  "},{"title":"DeepCopy​","type":1,"pageTitle":"Util","url":"/JojoCom/api/Util#DeepCopy","content":"This item only works when running on the client. Client &lt;/&gt; Util.DeepCopy(original: {}) → () Make a Deep Copy of a Table  "},{"title":"PackToAnimList​","type":1,"pageTitle":"Util","url":"/JojoCom/api/Util#PackToAnimList","content":"This item only works when running on the client. Client &lt;/&gt; Util.PackToAnimList(original: {}) → () For use with AnimController module Format: {Anim1 = 123456, Anim2 = &quot;rbxassetid://123456&quot;, Anim3 = RepStorage.Animations.Anim3}  "},{"title":"Stand","type":0,"sectionRef":"#","url":"/JojoCom/api/Stand","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Stand","url":"/JojoCom/api/Stand#functions","content":" "},{"title":"UseAbility​","type":1,"pageTitle":"Stand","url":"/JojoCom/api/Stand#UseAbility","content":"This item only works when running on the client. Client &lt;/&gt; Stand:UseAbility( Name: string, ...: boolean ) → () Use Stand Ability if it Exists and Cooldown isn't in Effect with Unlimited Additional Checks as an Optional Parameters  "},{"title":"GetIdle​","type":1,"pageTitle":"Stand","url":"/JojoCom/api/Stand#GetIdle","content":"This item only works when running on the client. Client &lt;/&gt; Stand:GetIdle() → boolean Get Stand Idle Status  "},{"title":"SetIdle​","type":1,"pageTitle":"Stand","url":"/JojoCom/api/Stand#SetIdle","content":"This item only works when running on the client. Client &lt;/&gt; Stand:SetIdle(active: boolean) → () Sets Stand Idle Status (To make him orbit the Player or not)  "},{"title":"GetAnimMod​","type":1,"pageTitle":"Stand","url":"/JojoCom/api/Stand#GetAnimMod","content":"This item only works when running on the client. Client &lt;/&gt; Stand:GetAnimMod() → {} Get Stand Anim Module  "},{"title":"PlayAnim​","type":1,"pageTitle":"Stand","url":"/JojoCom/api/Stand#PlayAnim","content":"This item only works when running on the client. Client &lt;/&gt; Stand:PlayAnim(Name: string) → AnimationTrack?    "},{"title":"StopAnim​","type":1,"pageTitle":"Stand","url":"/JojoCom/api/Stand#StopAnim","content":"This item only works when running on the client. Client &lt;/&gt; Stand:StopAnim(Name: string) → boolean   "},{"title":"GetModel​","type":1,"pageTitle":"Stand","url":"/JojoCom/api/Stand#GetModel","content":"This item only works when running on the client. Client &lt;/&gt; Stand:GetModel() → Model  Gets Stand Model in the World  "},{"title":"SetInvisible​","type":1,"pageTitle":"Stand","url":"/JojoCom/api/Stand#SetInvisible","content":"This item only works when running on the client. Client &lt;/&gt; Stand:SetInvisible(active: boolean) → () Sets Stand Model Invisible  "},{"title":"Destroy​","type":1,"pageTitle":"Stand","url":"/JojoCom/api/Stand#Destroy","content":"This item only works when running on the client. Client &lt;/&gt; Stand:Destroy() → () Remove Stand "},{"title":"Data","type":0,"sectionRef":"#","url":"/JojoCom/api/Data","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Data","url":"/JojoCom/api/Data#functions","content":" "},{"title":"getPlayerData​","type":1,"pageTitle":"Data","url":"/JojoCom/api/Data#getPlayerData","content":"&lt;/&gt; Data.getPlayerData(plr: Player ) → ()   "},{"title":"getBlockDataFromPlayer​","type":1,"pageTitle":"Data","url":"/JojoCom/api/Data#getBlockDataFromPlayer","content":"&lt;/&gt; Data.getBlockDataFromPlayer(plr: Player ) → {}   "},{"title":"getAbilityDataFromPlayer​","type":1,"pageTitle":"Data","url":"/JojoCom/api/Data#getAbilityDataFromPlayer","content":"&lt;/&gt; Data.getAbilityDataFromPlayer( plr: Player , Ability: string ) → {}   "},{"title":"getStandDataFromPlayer​","type":1,"pageTitle":"Data","url":"/JojoCom/api/Data#getStandDataFromPlayer","content":"&lt;/&gt; Data.getStandDataFromPlayer(plr: Player ) → {}   "},{"title":"applyDamageMult​","type":1,"pageTitle":"Data","url":"/JojoCom/api/Data#applyDamageMult","content":"&lt;/&gt; Data.applyDamageMult( plr: Player , amount: number ) → () Add or Substract Damage Multiplier Buff for the Player (in %) Data.applyDamageMult(game.Players.Someone, 0.5) -- Adds 50% Damage Buff, or &quot;-0.5&quot; to Substract it   "},{"title":"getDamageMult​","type":1,"pageTitle":"Data","url":"/JojoCom/api/Data#getDamageMult","content":"&lt;/&gt; Data.getDamageMult(plr: Player ) → number Gets Player Damage Multiplier  "},{"title":"clearPlayerData​","type":1,"pageTitle":"Data","url":"/JojoCom/api/Data#clearPlayerData","content":"&lt;/&gt; Data.clearPlayerData( plrKey: number-- Player ID ) → () Clear specified player ID from the session table Data.clearPlayerData(123456);  "},{"title":"Main","type":0,"sectionRef":"#","url":"/JojoCom/api/Main","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Main","url":"/JojoCom/api/Main#functions","content":" "},{"title":"SummonStand​","type":1,"pageTitle":"Main","url":"/JojoCom/api/Main#SummonStand","content":"This item only works when running on the server. Server &lt;/&gt; Main.SummonStand( Player: Player , Stand: string ) → () Summons a Stand and automatically tells the player to initiate and control it  "},{"title":"RemoveStand​","type":1,"pageTitle":"Main","url":"/JojoCom/api/Main#RemoveStand","content":"This item only works when running on the server. Server &lt;/&gt; Main.RemoveStand(Player: Player ) → () Removes the Player Stand  "},{"title":"GetStand​","type":1,"pageTitle":"Main","url":"/JojoCom/api/Main#GetStand","content":"This item only works when running on the server. Server &lt;/&gt; Main.GetStand(Player: Player ) → Model  Gets the Player Stand Model or nil if none is found  "},{"title":"GetModFolder​","type":1,"pageTitle":"Main","url":"/JojoCom/api/Main#GetModFolder","content":"This item only works when running on the server. Server &lt;/&gt; Main.GetModFolder() → Folder  Gets the folder that the module is located in  "},{"title":"GetFinisherSignal​","type":1,"pageTitle":"Main","url":"/JojoCom/api/Main#GetFinisherSignal","content":"This item only works when running on the server. Server &lt;/&gt; Main.GetFinisherSignal() → ( Events.Signal, Events.Signal ) Returns 2 signals: Finisher Signal - Activates upon the Finisher being triggered, passes 3 arguments: Attacker (The one who triggered the finisher), Target (The unfortunate soul with low hp) and the Stand Finisher Finisher Finale Signal - Should be fired when the Finisher is done to kill the Target and return the Attacker to the normal state local finisher, finisherComplete finisher, finisherComplete = JojoCombatMod.GetFinisherSignal():Connect(function(Attacker:Player, Target:Player, Finisher:string) --Make animations and such play out Animation.Finished:Wait() finisherComplete.Fire() end)   "},{"title":"GetPlayerData​","type":1,"pageTitle":"Main","url":"/JojoCom/api/Main#GetPlayerData","content":"This item only works when running on the server. Server &lt;/&gt; Main.GetPlayerData(plr: Player ) → Data.PlayerData Gets Player Data of a particular player  "},{"title":"GetDataMod​","type":1,"pageTitle":"Main","url":"/JojoCom/api/Main#GetDataMod","content":"This item only works when running on the server. Server &lt;/&gt; Main.GetDataMod() → {} Gets Data Module  "},{"title":"MakePlayerInvincible​","type":1,"pageTitle":"Main","url":"/JojoCom/api/Main#MakePlayerInvincible","content":"This item only works when running on the server. Server &lt;/&gt; Main.MakePlayerInvincible( plr: Player , active: boolean ) → () Sets a player invincible status in the Player Data  "},{"title":"GetBlockSignal​","type":1,"pageTitle":"Main","url":"/JojoCom/api/Main#GetBlockSignal","content":"&lt;/&gt; Main.GetBlockSignal() → () Gets Block Event Signal which passes a boolean argument to indicate if Block is activated or not _G.JojoCombatMod.GetBlockSignal():Connect( (Active:boolean)=&gt;() )   "},{"title":"GetAttackSignal​","type":1,"pageTitle":"Main","url":"/JojoCom/api/Main#GetAttackSignal","content":"&lt;/&gt; Main.GetAttackSignal() → () Gets Attack Event Signal  "},{"title":"GetAbilitySignal​","type":1,"pageTitle":"Main","url":"/JojoCom/api/Main#GetAbilitySignal","content":"&lt;/&gt; Main.GetAbilitySignal() → () Gets Ability Event Signal  "},{"title":"Fire​","type":1,"pageTitle":"Main","url":"/JojoCom/api/Main#Fire","content":"&lt;/&gt; Main.Fire( Name: string, ...: any ) → () Used to fire an Event  "},{"title":"GetEventMod​","type":1,"pageTitle":"Main","url":"/JojoCom/api/Main#GetEventMod","content":"&lt;/&gt; Main.GetEventMod() → {} Gets Events Module  "},{"title":"GetModSettings​","type":1,"pageTitle":"Main","url":"/JojoCom/api/Main#GetModSettings","content":"&lt;/&gt; Main.GetModSettings() → {} Gets Module Settings  "},{"title":"GetUtilMod​","type":1,"pageTitle":"Main","url":"/JojoCom/api/Main#GetUtilMod","content":"&lt;/&gt; Main.GetUtilMod() → {} Gets Utility Module  "},{"title":"GetAnimMod​","type":1,"pageTitle":"Main","url":"/JojoCom/api/Main#GetAnimMod","content":"&lt;/&gt; Main.GetAnimMod() → {} Gets Animation Module "}]